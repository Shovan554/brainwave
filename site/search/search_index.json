{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to BrainWave","text":"<p>BrainWave is an educational social media platform designed for students with shorter attention spans, offering a microlearning experience in a focused and collaborative environment. The platform allows users to connect with peers, promote projects and clubs, and learn directly from their teachers. A classroom feature will be integrated, enabling users to create classes or groups where they can manage assignments, share study materials, and engage in group chats with the entire class. BrainWave filters content to ensure that only educational material is shared, eliminating distractions like reels and non-educational content.</p>"},{"location":"#key-features","title":"Key Features","text":""},{"location":"#1-chat-reels-posts-and-accounts","title":"1. Chat, Reels, Posts, and Accounts","text":"<p>BrainWave offers a familiar social media experience with chat, reels, posts, and customizable accounts, providing a smooth and intuitive user interface.</p>"},{"location":"#2-club-accounts","title":"2. Club Accounts","text":"<p>Create or join club accounts, accessible to all members through a single link. Each club will have a dedicated Club Info page listing all members, and clubs can receive sponsorships via integrated PayPal support.</p>"},{"location":"#3-project-portfolios","title":"3. Project Portfolios","text":"<p>Each user has a personalized project portfolio, showcasing projects with GitHub links and detailed descriptions. This serves as a professional portfolio to highlight individual accomplishments.</p>"},{"location":"#4-classroom-feature","title":"4. Classroom Feature","text":"<p>BrainWave includes a classroom feature where groups are created for each class. Professors act as admins, and the feature allows for: - Assignment management - Class-based to-dos and reminders - A calendar tracking assignments and custom reminders</p>"},{"location":"#5-content-filtering","title":"5. Content Filtering","text":"<p>All content is filtered to ensure it aligns with educational goals, eliminating inappropriate material and distractions (e.g., explicit content or non-educational reels).</p>"},{"location":"#6-microlearning","title":"6. Microlearning","text":"<p>Embrace the power of microlearning with short, 3-minute videos designed for focused learning. Longer educational videos are available as a separate option.</p>"},{"location":"#7-content-preference-algorithm","title":"7. Content Preference Algorithm","text":"<p>A smart algorithm will tailor content to individual users based on engagement and preferences, helping them discover the most relevant educational material.</p>"},{"location":"#documentation","title":"Documentation","text":"<p>Check out our Documentation and join our Discord Community (coming soon) to learn more.</p>"},{"location":"#about-the-developer","title":"About the Developer","text":"<p>Shovan Raut is an eager learner and tech enthusiast, always exploring new ideas and technologies. Feel free to collaborate</p>"},{"location":"documentationIndex/","title":"BrainWave Documentation","text":""},{"location":"documentationIndex/#frameworks-used","title":"Frameworks Used","text":""},{"location":"documentationIndex/#1-frontend","title":"1. Frontend","text":"<ul> <li>React: The primary frontend framework for building the user interface of the BrainWave app.</li> <li>React Hooks: For managing state and lifecycle methods efficiently within functional components.</li> <li>React Router: For handling navigation between different pages.</li> </ul>"},{"location":"documentationIndex/#2-backend-future-consideration","title":"2. Backend (Future Consideration)","text":"<ul> <li>Node.js (Optional): We may consider using Node.js with Express for handling the backend API and communication with the database.</li> <li>PostgreSQL: A robust relational database system used to store all user data, posts, clubs, assignments, and other platform content.</li> </ul>"},{"location":"documentationIndex/#3-api-communication","title":"3. API Communication","text":"<ul> <li>REST API: The backend communicates with the frontend using RESTful APIs to handle data requests and responses.</li> </ul>"},{"location":"documentationIndex/#4-state-management","title":"4. State Management","text":"<ul> <li>React Context API or Redux: For managing application state efficiently across the app.</li> </ul>"},{"location":"documentationIndex/#5-authentication","title":"5. Authentication","text":"<ul> <li>JWT (JSON Web Tokens): To secure API endpoints and manage user authentication and sessions.</li> </ul>"},{"location":"documentationIndex/#6-storage","title":"6. Storage","text":"<ul> <li>LocalStorage / SessionStorage: Used to securely store JWT tokens on the client side for user authentication.</li> </ul>"},{"location":"documentationIndex/#future-enhancements","title":"Future Enhancements","text":"<ul> <li>Real-time features for chat and collaboration using WebSockets.</li> <li>Club and classroom management with enhanced collaboration tools.</li> <li>Integration with additional microlearning and content curation tools.</li> </ul>"}]}