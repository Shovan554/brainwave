{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to BrainWave \u00b6 BrainWave is an educational social media platform designed for students with shorter attention spans, offering a microlearning experience in a focused and collaborative environment. The platform allows users to connect with peers, promote projects and clubs, and learn directly from their own teachers. A classroom feature will be integrated, enabling users to create classes or groups where they can manage assignments, share study materials, and engage in group chats with the entire class. BrainWave filters content to ensure that only educational material is shared, eliminating distractions like reels and non-educational content. Key Features \u00b6 1. Chat, Reels, Posts, and Accounts \u00b6 BrainWave offers a familiar social media experience with chat, reels, posts, and customizable accounts, providing a smooth and intuitive user interface. 2. Club Accounts \u00b6 Create or join club accounts , accessible to all members through a single link. Each club will have a dedicated Club Info page listing all members, and clubs can receive sponsorships via integrated PayPal support. 3. Project Portfolios \u00b6 Each user has a personalized project portfolio, showcasing projects with GitHub links and detailed descriptions. This serves as a professional portfolio to highlight individual accomplishments. 4. Classroom Feature \u00b6 BrainWave includes a classroom feature where groups are created for each class. Professors act as admins, and the feature allows for: - Assignment management - Class-based to-dos and reminders - A calendar tracking assignments and custom reminders 5. Content Filtering \u00b6 All content is filtered to ensure it aligns with educational goals, eliminating inappropriate material and distractions (e.g., explicit content or non-educational reels). 6. Microlearning \u00b6 Embrace the power of microlearning with short, 3-minute videos designed for focused learning. Longer educational videos are available as a separate option. 7. Content Preference Algorithm \u00b6 A smart algorithm (likely similar to EdgeRank ) will tailor content to individual users based on engagement and preferences, helping them discover the most relevant educational material. Explore the Features section to dive deeper into each feature. Documentation \u00b6 Check out our Documentation and join our Discord Community (coming soon) to learn more. About the Developer \u00b6 Shovan Raut is an eager learner and tech enthusiast, always exploring new ideas and technologies. Feel free to collaborate on projects.","title":"Home"},{"location":"#welcome-to-brainwave","text":"BrainWave is an educational social media platform designed for students with shorter attention spans, offering a microlearning experience in a focused and collaborative environment. The platform allows users to connect with peers, promote projects and clubs, and learn directly from their own teachers. A classroom feature will be integrated, enabling users to create classes or groups where they can manage assignments, share study materials, and engage in group chats with the entire class. BrainWave filters content to ensure that only educational material is shared, eliminating distractions like reels and non-educational content.","title":"Welcome to BrainWave"},{"location":"#key-features","text":"","title":"Key Features"},{"location":"#1-chat-reels-posts-and-accounts","text":"BrainWave offers a familiar social media experience with chat, reels, posts, and customizable accounts, providing a smooth and intuitive user interface.","title":"1. Chat, Reels, Posts, and Accounts"},{"location":"#2-club-accounts","text":"Create or join club accounts , accessible to all members through a single link. Each club will have a dedicated Club Info page listing all members, and clubs can receive sponsorships via integrated PayPal support.","title":"2. Club Accounts"},{"location":"#3-project-portfolios","text":"Each user has a personalized project portfolio, showcasing projects with GitHub links and detailed descriptions. This serves as a professional portfolio to highlight individual accomplishments.","title":"3. Project Portfolios"},{"location":"#4-classroom-feature","text":"BrainWave includes a classroom feature where groups are created for each class. Professors act as admins, and the feature allows for: - Assignment management - Class-based to-dos and reminders - A calendar tracking assignments and custom reminders","title":"4. Classroom Feature"},{"location":"#5-content-filtering","text":"All content is filtered to ensure it aligns with educational goals, eliminating inappropriate material and distractions (e.g., explicit content or non-educational reels).","title":"5. Content Filtering"},{"location":"#6-microlearning","text":"Embrace the power of microlearning with short, 3-minute videos designed for focused learning. Longer educational videos are available as a separate option.","title":"6. Microlearning"},{"location":"#7-content-preference-algorithm","text":"A smart algorithm (likely similar to EdgeRank ) will tailor content to individual users based on engagement and preferences, helping them discover the most relevant educational material. Explore the Features section to dive deeper into each feature.","title":"7. Content Preference Algorithm"},{"location":"#documentation","text":"Check out our Documentation and join our Discord Community (coming soon) to learn more.","title":"Documentation"},{"location":"#about-the-developer","text":"Shovan Raut is an eager learner and tech enthusiast, always exploring new ideas and technologies. Feel free to collaborate on projects.","title":"About the Developer"},{"location":"documentationIndex/","text":"BrainWave Documentation \u00b6 Frameworks Used \u00b6 1. Frontend (Cross-platform) \u00b6 Flutter : Used to build the Android, iOS, and Web versions of the app. Dart : The programming language used for Flutter development. 2. Backend \u00b6 Node.js : Provides the backend API that communicates with the PostgreSQL database. Express.js : A minimalist web framework for Node.js to handle routing and HTTP requests. pg : A PostgreSQL client for Node.js to manage database interactions. 3. Database \u00b6 PostgreSQL : A robust relational database system used to store all user data, posts, clubs, assignments, and other platform content. 4. API Communication \u00b6 REST API : The Node.js backend uses Express to create a RESTful API for communication between the Flutter app and the backend. 5. State Management (Flutter) \u00b6 Provider or Riverpod : For managing application state efficiently across the Flutter app. 6. Authentication \u00b6 JWT (JSON Web Tokens) : Used for securing API endpoints and managing user authentication and sessions. 7. Storage \u00b6 Shared Preferences (Flutter): Used to securely store JWT tokens on the client side for user authentication. Future Enhancements \u00b6 Real-time features for chat and collaboration using WebSockets. Club and classroom management with enhanced collaboration tools. Integration with additional microlearning and content curation tools.","title":"Framework Used and Installation"},{"location":"documentationIndex/#brainwave-documentation","text":"","title":"BrainWave Documentation"},{"location":"documentationIndex/#frameworks-used","text":"","title":"Frameworks Used"},{"location":"documentationIndex/#1-frontend-cross-platform","text":"Flutter : Used to build the Android, iOS, and Web versions of the app. Dart : The programming language used for Flutter development.","title":"1. Frontend (Cross-platform)"},{"location":"documentationIndex/#2-backend","text":"Node.js : Provides the backend API that communicates with the PostgreSQL database. Express.js : A minimalist web framework for Node.js to handle routing and HTTP requests. pg : A PostgreSQL client for Node.js to manage database interactions.","title":"2. Backend"},{"location":"documentationIndex/#3-database","text":"PostgreSQL : A robust relational database system used to store all user data, posts, clubs, assignments, and other platform content.","title":"3. Database"},{"location":"documentationIndex/#4-api-communication","text":"REST API : The Node.js backend uses Express to create a RESTful API for communication between the Flutter app and the backend.","title":"4. API Communication"},{"location":"documentationIndex/#5-state-management-flutter","text":"Provider or Riverpod : For managing application state efficiently across the Flutter app.","title":"5. State Management (Flutter)"},{"location":"documentationIndex/#6-authentication","text":"JWT (JSON Web Tokens) : Used for securing API endpoints and managing user authentication and sessions.","title":"6. Authentication"},{"location":"documentationIndex/#7-storage","text":"Shared Preferences (Flutter): Used to securely store JWT tokens on the client side for user authentication.","title":"7. Storage"},{"location":"documentationIndex/#future-enhancements","text":"Real-time features for chat and collaboration using WebSockets. Club and classroom management with enhanced collaboration tools. Integration with additional microlearning and content curation tools.","title":"Future Enhancements"},{"location":"help/","text":"","title":"Help"},{"location":"features/chat_reels_posts/","text":"","title":"Chat, Reels, Posts, and Accounts"},{"location":"features/classroom_feature/","text":"","title":"Classroom Feature"},{"location":"features/club_accounts/","text":"","title":"Club Accounts"},{"location":"features/content_filtering/","text":"","title":"Content Filtering"},{"location":"features/content_preference_algorithm/","text":"","title":"Content Preference Algorithm"},{"location":"features/microlearning/","text":"","title":"Microlearning"},{"location":"features/project_portfolios/","text":"","title":"Project Portfolios"}]}